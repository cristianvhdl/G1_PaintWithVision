
#include <stdio.h>
#include "platform.h"
#include "xtft.h"

#include "constants.h"

int main()
{
	/************************************
	 *        INITIALIZATIONS
	 ************************************/
	// Set up Camera VDMA
	VDMAInit(FrameBuffer);

	// Initialize Buffers
	FillBuffer(DrawBuffer,0x0); //black
	FillBuffer(DisplayBuffer,0x0); //black

	// Turn on Display
	Display(DisplayBuffer);

	// Pixel Filter Threshold
	unsigned int threshold = 0x00E0E0E0;

	/************************************
	 *           MAIN LOOP
	 ************************************/
	while(1){

	// Capture a Frame
	// -We are guaranteed a single frame because Microblaze is faster than
	//  30Hz, so as long as we don't sleep to early, we are guaranteed
	//  VDMA will write a single frame and stop, decreasing the sleep
	//  value more will not make a difference, may cause no frame to be written
	// -If there is a compositor/VMDA race condition, use VDMAStopAndWait()
	VDMAStart();
	sleep(500000);
	VDMAStop();

	// Run Compositor
	// -Super slow, need to accelerate
	CompositorRun(FrameBuffer, DrawBuffer, DisplayBuffer, threshold);

	// LED Detection
	// -Currently this appears to give very large unchanging values
	unsigned int x = CompositorGetXPos();
	unsigned int y = CompositorGetYPos();

	// Draw on Drawing Buffer


	}
}


